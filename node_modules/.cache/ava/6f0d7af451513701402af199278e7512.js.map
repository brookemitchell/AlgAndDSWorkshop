{"version":3,"sources":["i.js"],"names":["test","require","one","loopN","n","console","log","act","exp","t","pass","exponent","base","expo","only","fail"],"mappings":";;AAAA,IAAIA,OAAOC,QAAQ,KAAR,CAAX;;AAEA,IAAIC,iIAAJ;;AAEA,SAASC,KAAT,CAAgBC,CAAhB,EAAmB;AACfC,YAAQC,GAAR,CAAYF,CAAZ;AACA,QAAIA,KAAK,CAAT,EAAY;AACR,eAAOA,CAAP;AACH;AACDD,UAAMC,IAAI,CAAV;AACH;;AAEDJ,KAAME,GAAN,EAAW,aAAK;AACZ,QAAIK,MAAMJ,MAAM,CAAN,CAAV;AACA,QAAIK,MAAM,CAAV;;AAGAC,MAAEC,IAAF;AACH,CAND;;AAQA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B,CAE7B;;AAED;;AAEAb,KAAKc,IAAL,CAAU,UAAV,EAAsB,aAAK;;AAEvBH,aAAS,CAAT,EAAY,CAAZ;AACAF,MAAEM,IAAF;AAEH,CALD","file":"i.js","sourcesContent":["var test = require('ava')\n\nvar one = ` Write a function that loops through the numbers n down to 0. If you haven't done so try using a while loop to do this. `\n\nfunction loopN (n) {\n    console.log(n);\n    if (n <= 0) {\n        return n\n    }\n    loopN(n - 1)\n}\n\ntest( one, t => {\n    var act = loopN(3)\n    var exp = 0\n\n\n    t.pass()\n}  )\n\nfunction exponent(base, expo) {\n    \n}\n\n//3.Write a function 'exponent' that takes two arguments base, and expo, uses a while loop to return the exponenet value of the base.\n\ntest.only('exponent', t => {\n\n    exponent(3, 3)\n    t.fail()\n\n})\n"]}