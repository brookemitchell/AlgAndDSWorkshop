{"version":3,"sources":["stackObjectExercises.test.js"],"names":["test","require","Stack","MinStack","beforeEach","t","context","s0","s1","s2","push","act","min","exp","is","act1","exp1"],"mappings":";;;;;AAAA,IAAIA,OAAOC,QAAQ,KAAR,CAAX;;eACwBA,QAAQ,kBAAR,C;;IAAnBC,K,YAAAA,K;IAAOC,Q,YAAAA,Q;AACZ;;AAEAH,KAAKI,UAAL,CAAgB,aAAK;AACjBC,MAAEC,OAAF,CAAUC,EAAV,GAAe,IAAIJ,QAAJ,CAAa,CAAb,CAAf;AACAE,MAAEC,OAAF,CAAUE,EAAV,GAAe,IAAIL,QAAJ,CAAa,CAAb,CAAf;AACAE,MAAEC,OAAF,CAAUG,EAAV,GAAe,IAAIN,QAAJ,CAAa,EAAb,CAAf;AACAE,MAAEC,OAAF,CAAUE,EAAV,CAAaE,IAAb,CAAkB,CAAlB;AACAL,MAAEC,OAAF,CAAUE,EAAV,CAAaE,IAAb,CAAkB,CAAlB;AACAL,MAAEC,OAAF,CAAUE,EAAV,CAAaE,IAAb,CAAkB,CAAlB;AACAL,MAAEC,OAAF,CAAUE,EAAV,CAAaE,IAAb,CAAkB,CAAlB;AACAL,MAAEC,OAAF,CAAUE,EAAV,CAAaE,IAAb,CAAkB,CAAlB;;AAEAL,MAAEC,OAAF,CAAUG,EAAV,CAAaC,IAAb,CAAkB,CAAlB;AACAL,MAAEC,OAAF,CAAUG,EAAV,CAAaC,IAAb,CAAkB,EAAlB;AACAL,MAAEC,OAAF,CAAUG,EAAV,CAAaC,IAAb,CAAkB,CAAlB;AACAL,MAAEC,OAAF,CAAUG,EAAV,CAAaC,IAAb,CAAkB,EAAlB;AACAL,MAAEC,OAAF,CAAUG,EAAV,CAAaC,IAAb,CAAkB,CAAlB;AACAL,MAAEC,OAAF,CAAUG,EAAV,CAAaC,IAAb,CAAkB,CAAlB;AACAL,MAAEC,OAAF,CAAUG,EAAV,CAAaC,IAAb,CAAkB,CAAlB;AACH,CAjBD;;AAmBAV,KAAK,sBAAL,EAA6B,aAAK;AAAA;AAAA;AAAA;AAAA;;AAAA,qBAEXK,EAAEC,OAFS;AAAA,QAEzBC,EAFyB,cAEzBA,EAFyB;AAAA,QAErBC,EAFqB,cAErBA,EAFqB;AAAA,QAEjBC,EAFiB,cAEjBA,EAFiB;;;AAI9B,QAAIE,MAAMH,GAAGI,GAAH,EAAV;AACA,QAAIC,MAAM,CAAV;;AAEAR,MAAES,EAAF,uBAAKH,GAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAUE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,QAAIE,OAAOP,GAAGI,GAAH,EAAX;AACA,QAAII,OAAO,CAAX;;AAEAX,MAAES,EAAF,yBAAKC,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAbD","file":"stackObjectExercises.test.js","sourcesContent":["var test = require('ava')\nvar {Stack, MinStack} = require('./stackObject.js')\n// 1. Implement a stack with a min method which returns the minimum element currently in the stack. This method should have O(1) time complexity. Make sure your implementation handles duplicates.\n\ntest.beforeEach(t => {\n    t.context.s0 = new MinStack(0)\n    t.context.s1 = new MinStack(5)\n    t.context.s2 = new MinStack(10)\n    t.context.s1.push(3)\n    t.context.s1.push(3)\n    t.context.s1.push(4)\n    t.context.s1.push(4)\n    t.context.s1.push(1)\n\n    t.context.s2.push(9)\n    t.context.s2.push(13)\n    t.context.s2.push(8)\n    t.context.s2.push(81)\n    t.context.s2.push(4)\n    t.context.s2.push(4)\n    t.context.s2.push(8)\n})\n\ntest('implement min method', t => {\n\n    var {s0, s1, s2} = t.context\n\n    var act = s1.min()\n    var exp = 1\n\n    t.is(act, exp)\n\n    var act1 = s1.min()\n    var exp1 = 4\n\n    t.is(act1, exp1)\n})\n"]}