{"version":3,"sources":["i.js"],"names":["test","require","Queue","capacity","Infinity","_capacity","_values","_head","_tail","_count","prototype","enqueue","value","dequeue","oldFirst","peek","values","getCount","count","beforeEach","t","context","zeroCap","smallCap","noCap","only","sm","console","log","act","exp","is"],"mappings":"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","file":"i.js","sourcesContent":["var test = require('ava')\n\nfunction Queue(capacity = Infinity) {\n    this._capacity = capacity\n    this._values = {}\n    this._head = '0'\n    this._tail = '0'\n    this._count = 0\n}\n\nQueue.prototype.enqueue = function(value) {\n    if (this._count >=  this._capacity) {\n        return \"Error: Max capacity hit - already full\"\n    }\n\n    this._values[this._tail++] = value\n    return ++this._count\n};\n\nQueue.prototype.dequeue = function() {\n    var oldFirst = this._values[this._head]\n\n    delete this._values[this._head]\n    this._head++\n    this._count--\n    return oldFirst\n};\n\nQueue.prototype.peek = function() {\n    return this.values[0]\n};\n\nQueue.prototype.getCount = function() {\n    return this.count\n};\n\ntest.beforeEach( t => {\n    t.context.zeroCap = new Queue(0)\n    t.context.smallCap = new Queue(3)\n    t.context.noCap = new Queue()\n})\n\ntest.only('dequeues correctly', t => {\n    var sm = t.context.smallCap\n    sm.enqueue('one')\n    sm.enqueue('two')\n    sm.enqueue('three')\n    console.log(sm);\n\n    var act = sm.dequeue()\n    var exp = 'one'\n\n    t.is(act, exp)\n})\n\ntest('rejects adding to zero cap', t => {\n    var act = t.context.zeroCap.enqueue('one')\n    var exp = \"Error: Max capacity hit - already full\"\n    t.is(act, exp)\n})\n\ntest('enques correctly', t => {\n    var sm = t.context.smallCap\n    sm.enqueue('one')\n    sm.enqueue('two')\n    sm.enqueue('three')\n\n    var act = t.context.smallCap._values['2']\n    var exp = 'three'\n\n    t.is(act, exp)\n\n})\n\n\n\n"]}