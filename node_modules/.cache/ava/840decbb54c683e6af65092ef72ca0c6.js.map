{"version":3,"sources":["quickSort.js"],"names":["test","require","swap","arr","i","piv","length","console","log","cur","swappy","act","exp","t","deepEqual","arr2","act2","exp2"],"mappings":";;;;;AAAA,IAAIA,OAAOC,QAAQ,KAAR,CAAX;;AAGA,SAASC,IAAT,CAAeC,GAAf,EAAoB;;AAGhB,SAAM,IAAIC,IAAI,CAAR,EAAWC,MAAMF,IAAIG,MAAJ,GAAY,CAAnC,GAA0CF,IAAID,IAAIG,MAAlD,EAA0D;;AAEtDC,gBAAQC,GAAR,CAAYL,GAAZ,EAAiBE,GAAjB;AACA,YAAKF,IAAIC,CAAJ,KAAUD,IAAIE,GAAJ,CAAf,EAAwB;AACpBD;AACH,SAFD,MAGK;AACD,gBAAIK,MAAMN,IAAIC,CAAJ,CAAV;AACA,gBAAIM,SAASP,IAAIE,MAAM,CAAV,CAAb;AACAF,gBAAIC,CAAJ,IAASM,MAAT;AACAP,gBAAIE,MAAK,CAAT,IAAcF,IAAIE,GAAJ,CAAd;AACAF,gBAAIE,MAAMI,GAAV;AACA;AACH;AACDF,gBAAQC,GAAR,CAAYL,GAAZ;AACH;AACD,WAAOA,GAAP;AACH;;AAEDH,KAAK,8BAAL,EAAqC,aAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEtC,QAAIG,MAAM,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAV;AACA,QAAIQ,MAAMT,KAAKC,GAAL,CAAV;AACA,QAAIS,MAAM,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAV;;AAEAC,MAAEC,SAAF,uBAAYH,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAiBC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,QAAIG,OAAO,CAAG,CAAH,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAX;AACA,QAAIC,OAAOd,KAAKa,IAAL,CAAX;AACA,QAAIE,OAAO,CAAG,CAAH,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAX;;AAEAJ,MAAEC,SAAF,yBAAYE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,QAAIF,OAAO,CAAG,CAAH,EAAM,CAAN,EAAS,CAAT,CAAX;AACA,QAAIC,OAAOd,KAAKa,IAAL,CAAX;AACA,QAAIE,OAAO,CAAG,CAAH,EAAM,CAAN,EAAS,CAAT,CAAX;;AAEAJ,MAAEC,SAAF,yBAAYE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAnBD","file":"quickSort.js","sourcesContent":["var test = require('ava')\n\n\nfunction swap (arr) {\n\n\n    for ( var i = 0, piv = arr.length -1 ;  ; i < arr.length) {\n\n        console.log(arr, piv);\n        if ( arr[i] <= arr[piv]){\n            i++\n        }\n        else {\n            var cur = arr[i]\n            var swappy = arr[piv - 1 ]\n            arr[i] = swappy\n            arr[piv -1] = arr[piv]\n            arr[piv = cur]\n            // piv -= 1\n        }\n        console.log(arr);\n    }\n    return arr\n}\n\ntest('swaps pivot to correct point', t => {\n\n    var arr = [ 1, 8, 2, 9, 7, 4 ]\n    var act = swap(arr)\n    var exp = [ 1, 2, 4, 9, 7, 8]\n\n    t.deepEqual(act, exp)\n\n    var arr2 = [  8, 2, 9, 7, 4]\n    var act2 = swap(arr2)\n    var exp2 = [  2, 4, 9, 7, 8]\n\n    t.deepEqual(act2, exp2)\n\n    var arr2 = [  9, 7, 4]\n    var act2 = swap(arr2)\n    var exp2 = [  4, 7, 9]\n\n    t.deepEqual(act2, exp2)\n})\n"]}