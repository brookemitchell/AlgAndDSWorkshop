{"version":3,"sources":["stackObject.js"],"names":["test","require","Stack","capacity","storage","last","undefined","count","prototype","push","value","pop","oldLast","peek","findMe","el","i","until","val","jumps","beforeEach","t","context","s0","s1","s2","act0","exp0","act","exp","is","act2","exp2","only","act1","exp1"],"mappings":"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","file":"stackObject.js","sourcesContent":["var test = require('ava')\n\nfunction Stack(capacity) {\n    // implement me...\n    this.storage = {}\n    this.last = undefined\n    this.count = 0\n    this.capacity = capacity\n}\n\nStack.prototype.push = function(value) {\n\n    if (this.count >= this.capacity) {\n        return \"Max capacity already reached. Remove element before adding a new one.\"\n    }\n\n    this.storage = Object.assign(this.storage, {\n        [this.count] : value,\n    })\n    this.last = value\n    this.count += 1\n    return this.count\n\n};\n// Time complexity:\n\nStack.prototype.pop = function() {\n    // implement me...\n    var oldLast = this.last\n    this.count -= 1\n    delete this.storage[this.count]\n    this.last = this.storage[this.count - 1]\n    return oldLast\n};\n// Time complexity:\n\nStack.prototype.peek = function() {\n    return this.last\n};\n// Time complexity:\n\nStack.prototype.count = function() {\n    return this.count\n};\n\nStack.prototype.findMe = function  (el) {\n\n    if (!this.last) {\n        return false\n    }\n\n    for (var i = this.count - 1; i >= 0; i-- ) {\n        if (this.storage[i] == el) {\n            return true\n        }\n    }\n    return false\n\n}\n\nStack.prototype.until = function until (val) {\n\n    if (this.count === 0 ) {\n        return false\n    }\n\n    var jumps = 1\n\n    \n    if (this.storage[this.count -1 ] === val) {\n        return true\n    }\n\n    return 3\n}\n\ntest.beforeEach(t => {\n    t.context.s0 = new Stack(0)\n    t.context.s1 = new Stack(3)\n    t.context.s1.push('one')\n    t.context.s1.push('two')\n    t.context.s1.push('four')\n    t.context.s2 = new Stack(5)\n})\n\ntest('method findMe to check if value is in stack', t => {\n\n    var {s0, s1, s2} = t.context\n\n    var act0 = s0.findMe('two')\n    var exp0 = false\n\n    var act = s1.findMe('two')\n    var exp = true\n\n    t.is(act, exp)\n\n    var act2 = s1.findMe('NotThere')\n    var exp2 = false\n\n    t.is(act2, exp2)\n})\n\n\ntest.only('number of pops until get certain value', t => {\n\n    var {s0, s1, s2} = t.context\n    var act = s1.until('one')\n    var exp = 3\n\n    t.is(act, exp)\n\n    var act1 = s0.until('one')\n    var exp1 = false\n\n    t.is(act1, exp1)\n\n    var act2 = s1.until('four')\n    var exp2 = 1\n\n    t.is(act2, exp2)\n\n\n})\n"]}