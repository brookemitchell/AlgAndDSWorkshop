'use strict';

var test = require('ava');

function Queue(capacity) {
    this._capacity = capacity || Infinity;
    this._values = {};
    this._head = 0;
    this._tail = 0;
    this._count = 0;
}

Queue.prototype.enqueue = function (value) {
    if (this.count >= this.capacity) {
        return "Error: Max capacity hit - already full";
    }

    this._values[this._tail++] = value;
    return this._count;
};

Queue.prototype.dequeue = function () {
    var oldFirst = this.values[0];
    for (var i = 0; i < this.count; i++) {
        this.values[i] = this.values[i + 1];
    }
    delete this.values[this.count - 1];
    this.count -= 1;
    return oldFirst;
};

Queue.prototype.peek = function () {
    return this.values[0];
};

Queue.prototype.getCount = function () {
    return this.count;
};

var x = new Queue(2);

x.enqueue('as');
x.enqueue('oiiou');
x.enqueue('as');
//# sourceMappingURL=node_modules/.cache/ava/9977f5b22d9fa5ac58d8a270f000ee14.js.map