"use strict";

var _defineProperty2 = require("/Users/brooke/Projects/AlgAndDSWorkshop/node_modules/babel-runtime/helpers/defineProperty.js");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _assign = require("/Users/brooke/Projects/AlgAndDSWorkshop/node_modules/babel-runtime/core-js/object/assign.js");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Stack(capacity) {
    // implement me...
    this.storage = {};
    this.last = undefined;
    this.count = 0;
    this.capacity = capacity;
}

Stack.prototype.push = function (value) {

    if (this.count >= this.capacity) {
        return "Max capacity already reached. Remove element before adding a new one.";
    }

    this.storage = (0, _assign2.default)(this.storage, (0, _defineProperty3.default)({}, this.count, value));
    this.last = value;
    this.count += 1;
    return this.count;
};
// Time complexity:

Stack.prototype.pop = function () {
    // implement me...
    var oldLast = this.last;
    this.count -= 1;
    delete this.storage[this.count];
    this.last = this.storage[this.count - 1];
    return oldLast;
};
// Time complexity:

Stack.prototype.peek = function () {
    return this.last;
};
// Time complexity:

Stack.prototype.count = function () {
    return this.count;
};

Stack.prototype.findMe = function (el) {

    if (!this.last) {
        return false;
    }

    for (var i = this.count - 1; i >= 0; i--) {
        if (this.storage[i] == el) {
            return true;
        }
    }
    return false;
};

Stack.prototype.until = function until(val) {

    if (this.count === 0) {
        return false;
    }

    var jumps = 1;

    for (var i = this.count - 1; i >= 0; i--) {
        if (this.storage[i] === val) {
            return jumps;
        }
        jumps++;
    }
    return false;
};

module.exports = Stack;
//# sourceMappingURL=node_modules/.cache/ava/866fb71bc34fbf744580a3edbbb3d68a.js.map