{"version":3,"sources":["quickSort.js"],"names":["test","require","swap","arr","i","pivLoc","x","length","console","log","cur","act","exp","t","deepEqual","arr2","act2","exp2"],"mappings":";;;;;AAAA,IAAIA,OAAOC,QAAQ,KAAR,CAAX;;AAGA,SAASC,IAAT,CAAeC,GAAf,EAAoB;;AAGhB,SAAM,IAAIC,IAAI,CAAR,EAAWC,SAAS,CAApB,EAAuBC,IAAIH,IAAII,MAArC,EAA+CH,IAAIE,CAAnD,EAAwDF,GAAxD,EAA6D;;AAEzDI,gBAAQC,GAAR,CAAYN,GAAZ;AACA,YAAKA,IAAIC,CAAJ,KAAUD,IAAIG,CAAJ,CAAf,EAAsB;AAClBD,qBAASD,CAAT;AACAC;AACH,SAHD,MAIK;AACD,gBAAIK,MAAMP,IAAIG,IAAIF,CAAR,CAAV;AACA;AACAD,gBAAIG,IAAI,CAAR,IAAaH,IAAIC,CAAJ,CAAb;AACAD,gBAAIC,CAAJ,IAASD,IAAIG,IAAI,CAAR,CAAT;AACAH,gBAAIG,IAAI,CAAR,IAAaI,GAAb;AACA;AACA;AACA;AACH;AACJ;AACD,WAAOP,GAAP;AACH;;AAEDH,KAAK,8BAAL,EAAqC,aAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEtC,QAAIG,MAAM,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAV;AACA,QAAIQ,MAAMT,KAAKC,GAAL,CAAV;AACA,QAAIS,MAAM,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAV;;AAEAC,MAAEC,SAAF,uBAAYH,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAiBC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,QAAIG,OAAO,CAAG,CAAH,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAX;AACA,QAAIC,OAAOd,KAAKa,IAAL,CAAX;AACA,QAAIE,OAAO,CAAG,CAAH,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAX;;AAEAJ,MAAEC,SAAF,yBAAYE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,QAAIF,OAAO,CAAG,CAAH,EAAM,CAAN,EAAS,CAAT,CAAX;AACA,QAAIC,OAAOd,KAAKa,IAAL,CAAX;AACA,QAAIE,OAAO,CAAG,CAAH,EAAM,CAAN,EAAS,CAAT,CAAX;;AAEAJ,MAAEC,SAAF,yBAAYE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAnBD","file":"quickSort.js","sourcesContent":["var test = require('ava')\n\n\nfunction swap (arr) {\n\n\n    for ( var i = 0, pivLoc = 0, x = arr.length  ; i < x  ; i++) {\n\n        console.log(arr);\n        if ( arr[i] <= arr[x]){\n            pivLoc = i\n            pivLoc++\n        }\n        else {\n            var cur = arr[x - i]\n            // var purp = arr[piv]\n            arr[x - 1] = arr[i]\n            arr[i] = arr[x - 2]\n            arr[x - 2] = cur\n            // arr[i] = cur\n            // arr[piv] = cur\n            // piv -= 1\n        }\n    }\n    return arr\n}\n\ntest('swaps pivot to correct point', t => {\n\n    var arr = [ 1, 8, 2, 9, 7, 4 ]\n    var act = swap(arr)\n    var exp = [ 1, 2, 4, 9, 7, 8]\n\n    t.deepEqual(act, exp)\n\n    var arr2 = [  8, 2, 9, 7, 4]\n    var act2 = swap(arr2)\n    var exp2 = [  2, 4, 9, 7, 8]\n\n    t.deepEqual(act2, exp2)\n\n    var arr2 = [  9, 7, 4]\n    var act2 = swap(arr2)\n    var exp2 = [  4, 7, 9]\n\n    t.deepEqual(act2, exp2)\n})\n"]}