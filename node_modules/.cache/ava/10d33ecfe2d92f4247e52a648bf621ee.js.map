{"version":3,"sources":["stackObject.js"],"names":["test","require","Stack","capacity","storage","last","undefined","count","prototype","push","value","pop","oldLast","peek","beforeEach","t","context","s1","s2","act","findMe","exp","act2","findeMe","fail"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,OAAOC,QAAQ,KAAR,CAAX;;AAEA,SAASC,KAAT,CAAeC,QAAf,EAAyB;AACrB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,IAAL,GAAYC,SAAZ;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKJ,QAAL,GAAgBA,QAAhB;AACH;;AAEDD,MAAMM,SAAN,CAAgBC,IAAhB,GAAuB,UAASC,KAAT,EAAgB;;AAEnC,QAAI,KAAKH,KAAL,IAAc,KAAKJ,QAAvB,EAAiC;AAC7B,eAAO,uEAAP;AACH;;AAED,SAAKC,OAAL,GAAe,sBAAc,KAAKA,OAAnB,oCACV,KAAKG,KADK,EACIG,KADJ,EAAf;AAGA,SAAKL,IAAL,GAAYK,KAAZ;AACA,SAAKH,KAAL,IAAc,CAAd;AACA,WAAO,KAAKA,KAAZ;AAEH,CAbD;AAcA;;AAEAL,MAAMM,SAAN,CAAgBG,GAAhB,GAAsB,YAAW;AAC7B;AACA,QAAIC,UAAU,KAAKP,IAAnB;AACA,SAAKE,KAAL,IAAc,CAAd;AACA,WAAO,KAAKH,OAAL,CAAa,KAAKG,KAAlB,CAAP;AACA,SAAKF,IAAL,GAAY,KAAKD,OAAL,CAAa,KAAKG,KAAL,GAAa,CAA1B,CAAZ;AACA,WAAOK,OAAP;AACH,CAPD;AAQA;;AAEAV,MAAMM,SAAN,CAAgBK,IAAhB,GAAuB,YAAW;AAC9B,WAAO,KAAKR,IAAZ;AACH,CAFD;AAGA;;AAEAH,MAAMM,SAAN,CAAgBD,KAAhB,GAAwB,YAAW;AAC/B,WAAO,KAAKA,KAAZ;AACH,CAFD;;AAIAP,KAAKc,UAAL,CAAgB,aAAK;AACjBC,MAAEC,OAAF,CAAUC,EAAV,GAAe,IAAIf,KAAJ,CAAU,CAAV,CAAf;AACAa,MAAEC,OAAF,CAAUC,EAAV,CAAaR,IAAb,CAAkB,KAAlB;AACAM,MAAEC,OAAF,CAAUC,EAAV,CAAaR,IAAb,CAAkB,KAAlB;AACAM,MAAEC,OAAF,CAAUE,EAAV,GAAe,IAAIhB,KAAJ,CAAU,CAAV,CAAf;AACH,CALD;;AAOAF,KAAK,6CAAL,EAAoD,aAAK;AAAA,QAEhDiB,EAFgD,GAE1CF,EAAEC,OAFwC,CAEhDC,EAFgD;;AAGrD,QAAIE,MAAMF,GAAGG,MAAH,CAAU,KAAV,CAAV;AACA,QAAIC,MAAM,IAAV;;AAIA,QAAIC,OAAOL,GAAGM,OAAH,CAAW,UAAX,CAAX;;AAEAR,MAAES,IAAF;AACH,CAXD","file":"stackObject.js","sourcesContent":["var test = require('ava')\n\nfunction Stack(capacity) {\n    // implement me...\n    this.storage = {}\n    this.last = undefined\n    this.count = 0\n    this.capacity = capacity\n}\n\nStack.prototype.push = function(value) {\n\n    if (this.count >= this.capacity) {\n        return \"Max capacity already reached. Remove element before adding a new one.\"\n    }\n\n    this.storage = Object.assign(this.storage, {\n        [this.count] : value,\n    })\n    this.last = value\n    this.count += 1\n    return this.count\n\n};\n// Time complexity:\n\nStack.prototype.pop = function() {\n    // implement me...\n    var oldLast = this.last\n    this.count -= 1\n    delete this.storage[this.count]\n    this.last = this.storage[this.count - 1]\n    return oldLast\n};\n// Time complexity:\n\nStack.prototype.peek = function() {\n    return this.last\n};\n// Time complexity:\n\nStack.prototype.count = function() {\n    return this.count\n};\n\ntest.beforeEach(t => {\n    t.context.s1 = new Stack(3)\n    t.context.s1.push('one')\n    t.context.s1.push('two')\n    t.context.s2 = new Stack(5)\n})\n\ntest('method findMe to check if value is in stack', t => {\n    \n    var {s1} = t.context\n    var act = s1.findMe('two')\n    var exp = true\n\n\n\n    var act2 = s1.findeMe('NotThere')\n\n    t.fail()\n})\n"]}